apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name:  {{ include "databus.fullname" . }}-cluster
spec:
  kafka:
    template:
      persistentVolumeClaim:
        metadata:
          annotations:
            robin.io/replication: "2"
            robin.io/faultdomain: host
            robin.io/media: SSD
            robin.io/compression: LZ4
            robin.io/encryption: AES256
    version: 2.8.0
    replicas: {{.Values.replicas }}
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        configuration:
          brokerCertChainAndKey:
            secretName: databus-ca
            certificate: ca.crt
            key: ca.key
      - name: external
        port: 9094
        type: nodeport
        tls: true
        configuration:
          brokerCertChainAndKey:
            secretName: databus-ca
            certificate: ca.crt
            key: ca.key
          bootstrap:
            nodePort: 32100
          {{- with .Values.brokerConfig }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
    {{- with .Values.kafkaResources }}
    resources:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.kafkaConfig }}
    config:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
    storage:
      type: jbod
      volumes:
      - id: 0
        type: persistent-claim
        size: {{  .Values.kafkaStorage.size  }}
        deleteClaim: false
  zookeeper:
    template:
      persistentVolumeClaim:
        metadata:
          annotations:
            robin.io/replication: "2"
            robin.io/faultdomain: host
            robin.io/media: SSD
            robin.io/compression: LZ4
            robin.io/encryption: AES256
    replicas: {{.Values.zookeeper.replicas }}
     {{- with .Values.zookeeperResources }}
    resources:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yml
    storage:
      type: persistent-claim
      size: {{  .Values.zookeeperStorage.size  }}
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
